"""
Django settings for fromleaf project.

Generated by 'django-admin startproject' using Django 1.9.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from os.path import abspath, dirname, join

from django.conf.global_settings import LOGGING

# Build paths inside the project like this: join(BASE_DIR, ...)
BASE_DIR = dirname(dirname(dirname(abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g^a!a^h%($0xo&tedq@x4k5(n6*5^5pc-dfnu6-^sld5@=7_b('

# SECURITY WARNING: don't run with debug turned on in production!
if 'APP_IS_ON_AWS' in os.environ:
	DEBUG = False
	ALLOWED_HOSTS = ['.elasticbeanstalk.com']
	APP_IS_ON = 'AWS'
elif 'APP_IS_ON_AZURE' in os.environ:
	DEBUG = False
	ALLOWED_HOSTS = ['*']
	APP_IS_ON = 'AZURE'
else:
	DEBUG = True
	ALLOWED_HOSTS = ['*']
	APP_IS_ON = 'DEV'


# Application definition
INSTALLED_APPS = [
	# Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

	# My Apps
	'fromleaf_common',
    'fromleaf_opening',
    'fromleaf_aboutme',
    'fromleaf_myskill',
    'fromleaf_career',
    'fromleaf_playing',
    'fromleaf_playing.darly',
    'fromleaf_playing.ourhockey',
    'fromleaf_playing.playground',
    'fromleaf_contactme',
]

if APP_IS_ON is 'AWS':
	INSTALLED_APPS += [
		# Third party
		'storages',	# for AWS S3 Service
	]


MIDDLEWARE_CLASSES = [
	'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_ajax.middleware.AJAXMiddleware',
]


ROOT_URLCONF = 'fromleaf.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'fromleaf_common/templates/fromleaf_common')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'fromleaf.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases
DATABASE_DIR = os.path.join(BASE_DIR, 'database')
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': join(DATABASE_DIR, 'default.db.sqlite3'),
    },
    'darly': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': join(DATABASE_DIR, 'darly.db.sqlite3'),
    },
	'playground': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': join(DATABASE_DIR, 'playing.db.sqlite3'),
    },
    'ourhockey': {
		'ENGINE': 'django.db.backends.mysql',
		'HOST': '127.0.0.1',
		'PORT': '3306',
		'OPTIONS': {
			'read_default_file': '/etc/my.cnf',
		},
    }
}
DATABASE_ROUTERS = [
	'fromleaf_common.db_router.DefaultRouter',
	# This ourhockey db is using on MySQL. so db_router code is divided.
	'fromleaf_playing.ourhockey.db_router.OurhockeyRouter', 
]


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/
LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_URL = '/static/'

if DEBUG:
	# 초기 환경 설정하는 경우 아래 폴더를 만들어서 사용할 수 있는 권한을 주어야 한다.
	STATIC_ROOT = '/var/www/fromleaf.mypage/static/'
	STATICFILES_DIRS = [
		# if you want to set other STATICFILE_DIRS, you have to set here.
		# However, you have to set the other STATIC_ROOR path
		# ex) os.path.join(BASE_DIR, 'somewhere')
		os.path.join(BASE_DIR, 'static'),
		# ourhockey static path
		os.path.join(BASE_DIR, 'fromleaf_playing/ourhockey/static') 
	]
else:
	STATIC_ROOT = '/static/'
	
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

USER_EMAIL = 'fromleaf@gmail.com'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = USER_EMAIL
EMAIL_HOST_PASSWORD = 'vftsvvrssbgywsmy'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

# LOGGING
LOGGING = {
	'version': 1,
	'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S",
        },
    },
    'handlers': {
        'mypage_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'fromleaf_logs/mypage.log'),
            'formatter': 'verbose',
        },
        'app_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'fromleaf_logs/app.log'),
            'formatter': 'verbose',
        },
        'database_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'fromleaf_logs/database.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'fromleaf_aboutme': {
            'handlers': ['mypage_handler'],
            'level': 'DEBUG',
        },
        'fromleaf_career': {
            'handlers': ['mypage_handler'],
            'level': 'DEBUG',
        },
        'fromleaf_common': {
            'handlers': ['mypage_handler'],
            'level': 'DEBUG',
        },
        'fromleaf_common.utils.database': {
            'handlers': ['database_handler'],
            'level': 'DEBUG',
        },
        'fromleaf_contactme': {
            'handlers': ['mypage_handler'],
            'level': 'DEBUG',
        },
        'fromleaf_myskill': {
            'handlers': ['mypage_handler'],
            'level': 'DEBUG',
        },
        'fromleaf_playing.darly': {
            'handlers': ['app_handler'],
            'level': 'DEBUG',
        },
        'fromleaf_playing.ourhockey': {
            'handlers': ['app_handler'],
            'level': 'DEBUG',
        },
    },
}
